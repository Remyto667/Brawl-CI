default:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind

stages:          # List of stages for jobs, and their order of executionj
  - build
  - test
  - lint
  - deploy

variables:
  DOCKER_IMAGE_TAG: brawl-stars-stats:$CI_COMMIT_SHORT_SHA      #nom dans le registry
  DOCKER_IMAGE_NAME: $CI_REGISTRY/$CI_PROJECT/$DOCKER_IMAGE_TAG   #image docker avec lien vers registry
  KUBE_CONTEXT: rriole/brawl-stars-stats:k3s
  K8S_NAMESPACE: ns-brawl-life



build-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - docker
  before_script:
  - docker login -u $CI_REGISTRY_ROBOT_NAME -p $CI_ROBOT_TOKEN $CI_REGISTRY
  - docker info
  script:
    - docker build -t $DOCKER_IMAGE_NAME .
    - docker push $DOCKER_IMAGE_NAME

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  tags:
    - shell
  script:
    - docker run $DOCKER_IMAGE_NAME npm run test
  

lint-test-job:   # This job also runs in the test stage.v
  stage: lint    # It can run at the same time as unit-test-job (in parallel).
  tags:
    - shell
  script:
    - docker run $DOCKER_IMAGE_NAME npm run lint

deployments:
  stage: deploy
  tags:
    - docker
  image: 
    name: roffe/kubectl:v1.13.0 #bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - kubectl config get-contexts
    - kubectl config use-context $KUBE_CONTEXT
    - kubectl create ns $K8S_NAMESPACE
    - kubectl delete --ignore-not-found=true secret gitlab-auth --namespace=$K8S_NAMESPACE
    - kubectl create secret docker-registry gitlab-auth --docker-server=$CI_REGISTRY --docker-username=$CI_REGISTRY_ROBOT_NAME --docker-password=$CI_ROBOT_TOKEN --namespace=$K8S_NAMESPACE
    - cat kubernetes/dep-brawl-life.yaml | envsubst | kubectl apply -f -
    - cat kubernetes/svc-clusterip-dep-brawl-life.yaml | envsubst | kubectl apply -f -
    - cat kubernetes/ing-app-brawl-life.yaml | envsubst | kubectl apply -f -